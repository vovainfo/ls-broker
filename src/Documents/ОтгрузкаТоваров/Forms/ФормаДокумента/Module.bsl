#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьДеревоТоваров();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоТоваров
&НаКлиенте
Процедура ДеревоТоваровОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ДобавитьТоварыПоГрузовомуМесту(ВыбранноеЗначение);
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ДобавитьТовар(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнен склад'");
		Сообщение.Поле = "Объект.Склад";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Необходимо записать документ'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Склад", Объект.Склад);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("МоментВремени", ПолучитьМоментВремени());
	ОткрытьФорму("Документ.ПриемкаТоваров.Форма.ФормаВыбораСТоварами", ПараметрыФормы, Элементы.ДеревоТоваров, 
					,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Асинх Процедура УдалитьТовар(Команда)
	ТекущиеДанные = Элементы.ДеревоТоваров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ГрузовоеМесто) Тогда
		ГрузовоеМесто = ТекущиеДанные.ГрузовоеМесто;
	Иначе
		ГрузовоеМесто = ТекущиеДанные.ПолучитьРодителя().ГрузовоеМесто;
	КонецЕсли;

	ВопросТекст = СтрШаблон(НСтр("ru = 'Удалить все товары по грузовому месту <%1>?'"), ГрузовоеМесто);
	Ответ = Ждать ВопросАсинх(ВопросТекст, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	УдалитьТоварыПоГрузовомуМесту(ГрузовоеМесто);
КонецПроцедуры
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УдалитьТоварыПоГрузовомуМесту(ГрузовоеМесто)
	Отбор = Новый Структура("ГрузовоеМесто", ГрузовоеМесто);
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденныеСтроки Цикл
		Объект.Товары.Удалить(Строка);
	КонецЦикла;
	Модифицированность = Истина;
	ЗаполнитьДеревоТоваров();
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыПоГрузовомуМесту(ГрузовоеМесто)
	Отбор = Новый Структура("ГрузовоеМесто", ГрузовоеМесто);
	Если Объект.Товары.НайтиСтроки(Отбор).Количество() > 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Грузовое место уже добавлено ранее'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриемкаТоваровТовары.Товар,
		|	ПриемкаТоваровТовары.Количество,
		|	&ГрузовоеМесто КАК ГрузовоеМесто
		|ИЗ
		|	Документ.ПриемкаТоваров.Товары КАК ПриемкаТоваровТовары
		|ГДЕ
		|	ПриемкаТоваровТовары.Ссылка.ГрузовоеМесто = &ГрузовоеМесто";
	Запрос.УстановитьПараметр("ГрузовоеМесто", ГрузовоеМесто);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Товар = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Товар, Выборка);
	КонецЦикла;
	ЗаполнитьДеревоТоваров();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоТоваров()
	Дерево = РеквизитФормыВЗначение("ДеревоТоваров");
	Дерево.Строки.Очистить();
	
	ГрузовыеМеста = Объект.Товары.Выгрузить();
	ГрузовыеМеста.Свернуть("ГрузовоеМесто");
	Для Каждого ГрузовоеМесто Из ГрузовыеМеста Цикл
		СтрокаГрузовоеМесто = Дерево.Строки.Добавить();
		СтрокаГрузовоеМесто.ГрузовоеМесто = ГрузовоеМесто.ГрузовоеМесто;
		Отбор = Новый Структура("ГрузовоеМесто", ГрузовоеМесто.ГрузовоеМесто);
		ТоварыГрузовогоМеста = Объект.Товары.НайтиСтроки(Отбор);
		Для Каждого Товар Из ТоварыГрузовогоМеста Цикл
			СтрокаТовар = СтрокаГрузовоеМесто.Строки.Добавить();
			СтрокаТовар.Товар = Товар.Товар;
			СтрокаТовар.Количество = Товар.Количество;
		КонецЦикла;			
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дерево, "ДеревоТоваров");
КонецПроцедуры

&НаСервере
Функция ПолучитьМоментВремени()
	Возврат РеквизитФормыВЗначение("Объект").МоментВремени();
КонецФункции

#КонецОбласти
